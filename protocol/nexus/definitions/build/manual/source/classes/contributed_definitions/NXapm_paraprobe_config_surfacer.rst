.. auto-generated by dev_tools.docs.nxdl from the NXDL source contributed_definitions/NXapm_paraprobe_config_surfacer.nxdl.xml -- DO NOT EDIT

.. index::
    ! NXapm_paraprobe_config_surfacer (application definition)
    ! apm_paraprobe_config_surfacer (application definition)
    see: apm_paraprobe_config_surfacer (application definition); NXapm_paraprobe_config_surfacer

.. _NXapm_paraprobe_config_surfacer:

===============================
NXapm_paraprobe_config_surfacer
===============================

**Status**:

  application definition, extends :ref:`NXobject`

**Description**:

  Configuration of a paraprobe-surfacer tool run in atom probe microscopy.

**Symbols**:

  The symbols used in the schema to specify e.g. dimensions of arrays.

  **n_alpha_values**: Number of alpha values (and offset values) to probe.

  **n_values**: How many different match values does the filter specify.

**Groups cited**:
  :ref:`NXapm_input_ranging`, :ref:`NXapm_input_reconstruction`, :ref:`NXcg_cylinder_set`, :ref:`NXcg_ellipsoid_set`, :ref:`NXcg_face_list_data_structure`, :ref:`NXcg_hexahedron_set`, :ref:`NXcs_filter_boolean_mask`, :ref:`NXcs_profiling`, :ref:`NXentry`, :ref:`NXmatch_filter`, :ref:`NXprocess`, :ref:`NXspatial_filter`, :ref:`NXsubsampling_filter`

.. index:: NXentry (base class); used in application definition, NXprocess (base class); used in application definition, NXapm_input_reconstruction (base class); used in application definition, NXapm_input_ranging (base class); used in application definition, NXspatial_filter (base class); used in application definition, NXcg_ellipsoid_set (base class); used in application definition, NXcg_cylinder_set (base class); used in application definition, NXcg_hexahedron_set (base class); used in application definition, NXcg_face_list_data_structure (base class); used in application definition, NXcs_filter_boolean_mask (base class); used in application definition, NXsubsampling_filter (base class); used in application definition, NXmatch_filter (base class); used in application definition, NXcs_profiling (base class); used in application definition

**Structure**:

  .. _/NXapm_paraprobe_config_surfacer/ENTRY-group:

  **ENTRY**: (required) :ref:`NXentry` 


    .. _/NXapm_paraprobe_config_surfacer/ENTRY@version-attribute:

    .. index:: version (group attribute)

    **@version**: (required) :ref:`NX_CHAR <NX_CHAR>` 

      Version specifier of this application definition.

    .. _/NXapm_paraprobe_config_surfacer/ENTRY/definition-field:

    .. index:: definition (field)

    **definition**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXentry/definition-field>`

      .. collapse:: Official NeXus NXDL schema with which this file was written. ...

          Official NeXus NXDL schema with which this file was written.

          Obligatory value: ``NXapm_paraprobe_config_surfacer``

    .. _/NXapm_paraprobe_config_surfacer/ENTRY/program-field:

    .. index:: program (field)

    **program**: (required) :ref:`NX_CHAR <NX_CHAR>` 

      .. collapse:: Given name of the program/software/tool with which this NeXus ...

          Given name of the program/software/tool with which this NeXus
          (configuration) file was generated.

      .. _/NXapm_paraprobe_config_surfacer/ENTRY/program@version-attribute:

      .. index:: version (field attribute)

      **@version**: (required) :ref:`NX_CHAR <NX_CHAR>` 

        .. collapse:: Ideally program version plus build number, or commit hash or description ...

            Ideally program version plus build number, or commit hash or description
            of ever persistent resources where the source code of the program and
            build instructions can be found so that the program can be configured
            ideally in such a manner that the result of this computational process
            is recreatable in the same deterministic manner.

    .. _/NXapm_paraprobe_config_surfacer/ENTRY/time_stamp-field:

    .. index:: time_stamp (field)

    **time_stamp**: (required) :ref:`NX_DATE_TIME <NX_DATE_TIME>` 

      .. collapse:: ISO 8601 formatted time code with local time zone offset to UTC ...

          ISO 8601 formatted time code with local time zone offset to UTC
          information included when this configuration file was created.

    .. _/NXapm_paraprobe_config_surfacer/ENTRY/analysis_identifier-field:

    .. index:: analysis_identifier (field)

    **analysis_identifier**: (required) :ref:`NX_CHAR <NX_CHAR>` 

      .. collapse:: Ideally, a (globally persistent) unique identifier for referring ...

          Ideally, a (globally persistent) unique identifier for referring
          to this analysis.

    .. _/NXapm_paraprobe_config_surfacer/ENTRY/analysis_description-field:

    .. index:: analysis_description (field)

    **analysis_description**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

      Possibility for leaving a free-text description about this analysis.

    .. _/NXapm_paraprobe_config_surfacer/ENTRY/results_path-field:

    .. index:: results_path (field)

    **results_path**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

      .. collapse:: Path to the directory where the tool should store NeXus/HDF5 results ...

          Path to the directory where the tool should store NeXus/HDF5 results
          of this analysis. If not specified results will be stored in the
          current working directory.

    .. _/NXapm_paraprobe_config_surfacer/ENTRY/number_of_processes-field:

    .. index:: number_of_processes (field)

    **number_of_processes**: (required) :ref:`NX_UINT <NX_UINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      .. collapse:: For now a support field for the tool to identify how many individual ...

          For now a support field for the tool to identify how many individual
          analyses the tool should executed as part of the analysis.

    .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS-group:

    **PROCESS**: (required) :ref:`NXprocess` :ref:`⤆ </NXentry/PROCESS-group>`


      .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/dataset-group:

      **dataset**: (required) :ref:`NXapm_input_reconstruction` 


        .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/dataset/filename-field:

        .. index:: filename (field)

        **filename**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXapm_input_reconstruction/filename-field>`


          .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/dataset/filename@version-attribute:

          .. index:: version (field attribute)

          **@version**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXapm_input_reconstruction/filename@version-attribute>`


        .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/dataset/dataset_name_reconstruction-field:

        .. index:: dataset_name_reconstruction (field)

        **dataset_name_reconstruction**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXapm_input_reconstruction/dataset_name_reconstruction-field>`


        .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/dataset/dataset_name_mass_to_charge-field:

        .. index:: dataset_name_mass_to_charge (field)

        **dataset_name_mass_to_charge**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXapm_input_reconstruction/dataset_name_mass_to_charge-field>`


      .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/iontypes-group:

      **iontypes**: (required) :ref:`NXapm_input_ranging` 


        .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/iontypes/filename-field:

        .. index:: filename (field)

        **filename**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXapm_input_ranging/filename-field>`


          .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/iontypes/filename@version-attribute:

          .. index:: version (field attribute)

          **@version**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXapm_input_ranging/filename@version-attribute>`


        .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/iontypes/group_name_iontypes-field:

        .. index:: group_name_iontypes (field)

        **group_name_iontypes**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXapm_input_ranging/group_name_iontypes-field>`


      .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter-group:

      **spatial_filter**: (optional) :ref:`NXspatial_filter` 


        .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/windowing_method-field:

        .. index:: windowing_method (field)

        **windowing_method**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXspatial_filter/windowing_method-field>`


        .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_ELLIPSOID_SET-group:

        **CG_ELLIPSOID_SET**: (optional) :ref:`NXcg_ellipsoid_set` :ref:`⤆ </NXspatial_filter/CG_ELLIPSOID_SET-group>`


          .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_ELLIPSOID_SET/dimensionality-field:

          .. index:: dimensionality (field)

          **dimensionality**: (required) :ref:`NX_POSINT <NX_POSINT>` :ref:`⤆ </NXcg_ellipsoid_set/dimensionality-field>`


          .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_ELLIPSOID_SET/cardinality-field:

          .. index:: cardinality (field)

          **cardinality**: (required) :ref:`NX_POSINT <NX_POSINT>` :ref:`⤆ </NXcg_ellipsoid_set/cardinality-field>`


          .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_ELLIPSOID_SET/identifier_offset-field:

          .. index:: identifier_offset (field)

          **identifier_offset**: (required) :ref:`NX_INT <NX_INT>` :ref:`⤆ </NXcg_ellipsoid_set/identifier_offset-field>`


          .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_ELLIPSOID_SET/center-field:

          .. index:: center (field)

          **center**: (required) :ref:`NX_NUMBER <NX_NUMBER>` :ref:`⤆ </NXcg_ellipsoid_set/center-field>`


          .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_ELLIPSOID_SET/half_axes_radii-field:

          .. index:: half_axes_radii (field)

          **half_axes_radii**: (required) :ref:`NX_NUMBER <NX_NUMBER>` :ref:`⤆ </NXcg_ellipsoid_set/half_axes_radii-field>`


          .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_ELLIPSOID_SET/orientation-field:

          .. index:: orientation (field)

          **orientation**: (required) :ref:`NX_NUMBER <NX_NUMBER>` :ref:`⤆ </NXcg_ellipsoid_set/orientation-field>`


        .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_CYLINDER_SET-group:

        **CG_CYLINDER_SET**: (optional) :ref:`NXcg_cylinder_set` :ref:`⤆ </NXspatial_filter/CG_CYLINDER_SET-group>`


          .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_CYLINDER_SET/dimensionality-field:

          .. index:: dimensionality (field)

          **dimensionality**: (required) :ref:`NX_POSINT <NX_POSINT>` :ref:`⤆ </NXcg_cylinder_set/dimensionality-field>`


          .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_CYLINDER_SET/cardinality-field:

          .. index:: cardinality (field)

          **cardinality**: (required) :ref:`NX_POSINT <NX_POSINT>` :ref:`⤆ </NXcg_cylinder_set/cardinality-field>`


          .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_CYLINDER_SET/identifier_offset-field:

          .. index:: identifier_offset (field)

          **identifier_offset**: (required) :ref:`NX_INT <NX_INT>` :ref:`⤆ </NXcg_cylinder_set/identifier_offset-field>`


          .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_CYLINDER_SET/center-field:

          .. index:: center (field)

          **center**: (required) :ref:`NX_NUMBER <NX_NUMBER>` :ref:`⤆ </NXcg_cylinder_set/center-field>`


          .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_CYLINDER_SET/height-field:

          .. index:: height (field)

          **height**: (required) :ref:`NX_NUMBER <NX_NUMBER>` :ref:`⤆ </NXcg_cylinder_set/height-field>`


          .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_CYLINDER_SET/radii-field:

          .. index:: radii (field)

          **radii**: (required) :ref:`NX_NUMBER <NX_NUMBER>` :ref:`⤆ </NXcg_cylinder_set/radii-field>`


        .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_HEXAHEDRON_SET-group:

        **CG_HEXAHEDRON_SET**: (optional) :ref:`NXcg_hexahedron_set` :ref:`⤆ </NXspatial_filter/CG_HEXAHEDRON_SET-group>`


          .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_HEXAHEDRON_SET/dimensionality-field:

          .. index:: dimensionality (field)

          **dimensionality**: (required) :ref:`NX_POSINT <NX_POSINT>` :ref:`⤆ </NXcg_hexahedron_set/dimensionality-field>`


          .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_HEXAHEDRON_SET/cardinality-field:

          .. index:: cardinality (field)

          **cardinality**: (required) :ref:`NX_POSINT <NX_POSINT>` :ref:`⤆ </NXcg_hexahedron_set/cardinality-field>`


          .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_HEXAHEDRON_SET/identifier_offset-field:

          .. index:: identifier_offset (field)

          **identifier_offset**: (required) :ref:`NX_INT <NX_INT>` :ref:`⤆ </NXcg_hexahedron_set/identifier_offset-field>`


          .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_HEXAHEDRON_SET/hexahedra-group:

          **hexahedra**: (required) :ref:`NXcg_face_list_data_structure` :ref:`⤆ </NXcg_hexahedron_set/hexahedra-group>`


        .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CS_FILTER_BOOLEAN_MASK-group:

        **CS_FILTER_BOOLEAN_MASK**: (optional) :ref:`NXcs_filter_boolean_mask` :ref:`⤆ </NXspatial_filter/CS_FILTER_BOOLEAN_MASK-group>`


          .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CS_FILTER_BOOLEAN_MASK/number_of_objects-field:

          .. index:: number_of_objects (field)

          **number_of_objects**: (required) :ref:`NX_UINT <NX_UINT>` :ref:`⤆ </NXcs_filter_boolean_mask/number_of_objects-field>`


          .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CS_FILTER_BOOLEAN_MASK/bitdepth-field:

          .. index:: bitdepth (field)

          **bitdepth**: (required) :ref:`NX_UINT <NX_UINT>` :ref:`⤆ </NXcs_filter_boolean_mask/bitdepth-field>`


          .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CS_FILTER_BOOLEAN_MASK/mask-field:

          .. index:: mask (field)

          **mask**: (required) :ref:`NX_UINT <NX_UINT>` :ref:`⤆ </NXcs_filter_boolean_mask/mask-field>`


          .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CS_FILTER_BOOLEAN_MASK/identifier-field:

          .. index:: identifier (field)

          **identifier**: (required) :ref:`NX_UINT <NX_UINT>` :ref:`⤆ </NXcs_filter_boolean_mask/identifier-field>`


      .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/evaporation_id_filter-group:

      **evaporation_id_filter**: (optional) :ref:`NXsubsampling_filter` 


        .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/evaporation_id_filter/linear_range_min_incr_max-field:

        .. index:: linear_range_min_incr_max (field)

        **linear_range_min_incr_max**: (required) :ref:`NX_UINT <NX_UINT>` (Rank: 1, Dimensions: [3]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} :ref:`⤆ </NXsubsampling_filter/linear_range_min_incr_max-field>`


      .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/iontype_filter-group:

      **iontype_filter**: (optional) :ref:`NXmatch_filter` 


        .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/iontype_filter/method-field:

        .. index:: method (field)

        **method**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXmatch_filter/method-field>`


        .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/iontype_filter/match-field:

        .. index:: match (field)

        **match**: (required) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [n_values]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} :ref:`⤆ </NXmatch_filter/match-field>`


      .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/hit_multiplicity_filter-group:

      **hit_multiplicity_filter**: (optional) :ref:`NXmatch_filter` 


        .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/hit_multiplicity_filter/method-field:

        .. index:: method (field)

        **method**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXmatch_filter/method-field>`


        .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/hit_multiplicity_filter/match-field:

        .. index:: match (field)

        **match**: (required) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [n_values]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} :ref:`⤆ </NXmatch_filter/match-field>`


      .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/surface_meshing-group:

      **surface_meshing**: (required) :ref:`NXprocess` 


        .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/surface_meshing/preprocessing_method-field:

        .. index:: preprocessing_method (field)

        **preprocessing_method**: (required) :ref:`NX_CHAR <NX_CHAR>` 

          .. collapse:: Specifies the method that is used to preprocess the point cloud. ...

              Specifies the method that is used to preprocess the point cloud.
              The main purpose of this setting is to specify whether the point
              cloud should be segmented or not during the preprocessing
              to identify which points are more likely lying close to the edge
              of the point cloud. These points could be more relevant than the
              interior points for certain alpha-shape constructions.

              By default no such filtering is used during pre-processing.
              By contrast, the option kuehbach activates a preprocessing
              during which a Hoshen-Kopelman percolation analysis is used
              to identify which points are closer to the edge of the dataset.
              This can reduce the number of points in the alpha-shape
              computation and thus improve performance substantially.
              Details about the methods are reported in 
              `M. Kühbach et al. <https://doi.org/10.1038/s41524-020-00486-1>`_.

              Any of these values: ``default`` | ``kuehbach``

        .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/surface_meshing/preprocessing_kernel_width-field:

        .. index:: preprocessing_kernel_width (field)

        **preprocessing_kernel_width**: (required) :ref:`NX_UINT <NX_UINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

          .. collapse:: When using the kuehbach preprocessing, this is the width of the ...

              When using the kuehbach preprocessing, this is the width of the
              kernel for identifying which ions are in voxels close to the
              edge of the point cloud.

        .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/surface_meshing/alpha_value_choice-field:

        .. index:: alpha_value_choice (field)

        **alpha_value_choice**: (required) :ref:`NX_CHAR <NX_CHAR>` 

          .. collapse:: Specifies which method to use to define the alpha value. ...

              Specifies which method to use to define the alpha value.
              The value convex_hull_naive is the default. This instructs the tool
              to use a fast specialized algorithm for computing only the convex
              hull. The resulting triangles can be skinny.

              The value convex_hull_refine computes first also a convex_hull_naive
              but refines the mesh by triangle flipping and splitting to improve
              the quality of the mesh.

              The value smallest_solid instructs the CGAL library to choose a
              value which realizes an alpha-shape that is the smallest solid.

              The value cgal_optimal instructs the library to choose a value
              which the library considers as an optimal value. Details are
              define in the respective section of the CGAL library on 3D alpha
              shapes.

              The value set_of_values instructs to compute a list of
              alpha-shapes for the specified alpha-values.

              The value set_of_alpha_wrappings instructs the library to generate
              a set of so-called alpha wrappings. These are a method
              which is similar to alpha shapes but provide additional guarantees
              though such as watertightness and proximity constraints on the
              resulting wrapping.

              Any of these values:

                * ``convex_hull_naive``

                * ``convex_hull_refine``

                * ``smallest_solid``

                * ``cgal_optimal``

                * ``set_of_values``

                * ``set_of_alpha_wrappings``


        .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/surface_meshing/alpha_values-field:

        .. index:: alpha_values (field)

        **alpha_values**: (required) :ref:`NX_FLOAT <NX_FLOAT>` (Rank: 1, Dimensions: [n_alpha_values]) {units=\ :ref:`NX_ANY <NX_ANY>`} 

          .. collapse:: Array of alpha values to use when alpha_value_choice is set_of_values ...

              Array of alpha values to use when alpha_value_choice is set_of_values
              or when alpha_value_choice is set_of_alpha_wrappings.

        .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/surface_meshing/offset_values-field:

        .. index:: offset_values (field)

        **offset_values**: (required) :ref:`NX_FLOAT <NX_FLOAT>` (Rank: 1, Dimensions: [n_alpha_values]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

          .. collapse:: Array of offset values to use when alpha_value_choice is ...

              Array of offset values to use when alpha_value_choice is
              set_of_alpha_wrappings. The array of alpha_values and offset_values
              define a sequence of (alpha and offset value).

        .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/surface_meshing/has_exterior_facets-field:

        .. index:: has_exterior_facets (field)

        **has_exterior_facets**: (required) :ref:`NX_BOOLEAN <NX_BOOLEAN>` 

          .. collapse:: Specifies if the tool should compute the set of exterior triangle ...

              Specifies if the tool should compute the set of exterior triangle
              facets for each alpha complex (for convex hull, alpha shapes, and wrappings)

        .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/surface_meshing/has_closure-field:

        .. index:: has_closure (field)

        **has_closure**: (required) :ref:`NX_BOOLEAN <NX_BOOLEAN>` 

          .. collapse:: Specifies if the tool should check if the alpha complex of exterior ...

              Specifies if the tool should check if the alpha complex of exterior
              triangular facets is a closed polyhedron.

        .. _/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/surface_meshing/has_interior_tetrahedra-field:

        .. index:: has_interior_tetrahedra (field)

        **has_interior_tetrahedra**: (required) :ref:`NX_BOOLEAN <NX_BOOLEAN>` 

          .. collapse:: Specifies if the tool should compute all interior tetrahedra  ...

              Specifies if the tool should compute all interior tetrahedra 
              of the alpha complex (currently only for alpha shapes).

    .. _/NXapm_paraprobe_config_surfacer/ENTRY/performance-group:

    **performance**: (required) :ref:`NXcs_profiling` 


      .. _/NXapm_paraprobe_config_surfacer/ENTRY/performance/current_working_directory-field:

      .. index:: current_working_directory (field)

      **current_working_directory**: (required) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXcs_profiling/current_working_directory-field>`



Hypertext Anchors
-----------------

List of hypertext anchors for all groups, fields,
attributes, and links defined in this class.


* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY-group </NXapm_paraprobe_config_surfacer/ENTRY-group>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/analysis_description-field </NXapm_paraprobe_config_surfacer/ENTRY/analysis_description-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/analysis_identifier-field </NXapm_paraprobe_config_surfacer/ENTRY/analysis_identifier-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/definition-field </NXapm_paraprobe_config_surfacer/ENTRY/definition-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/number_of_processes-field </NXapm_paraprobe_config_surfacer/ENTRY/number_of_processes-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/performance-group </NXapm_paraprobe_config_surfacer/ENTRY/performance-group>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/performance/current_working_directory-field </NXapm_paraprobe_config_surfacer/ENTRY/performance/current_working_directory-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS-group </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS-group>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/dataset-group </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/dataset-group>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/dataset/dataset_name_mass_to_charge-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/dataset/dataset_name_mass_to_charge-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/dataset/dataset_name_reconstruction-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/dataset/dataset_name_reconstruction-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/dataset/filename-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/dataset/filename-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/dataset/filename@version-attribute </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/dataset/filename@version-attribute>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/evaporation_id_filter-group </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/evaporation_id_filter-group>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/evaporation_id_filter/linear_range_min_incr_max-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/evaporation_id_filter/linear_range_min_incr_max-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/hit_multiplicity_filter-group </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/hit_multiplicity_filter-group>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/hit_multiplicity_filter/match-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/hit_multiplicity_filter/match-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/hit_multiplicity_filter/method-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/hit_multiplicity_filter/method-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/iontype_filter-group </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/iontype_filter-group>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/iontype_filter/match-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/iontype_filter/match-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/iontype_filter/method-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/iontype_filter/method-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/iontypes-group </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/iontypes-group>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/iontypes/filename-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/iontypes/filename-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/iontypes/filename@version-attribute </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/iontypes/filename@version-attribute>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/iontypes/group_name_iontypes-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/iontypes/group_name_iontypes-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter-group </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter-group>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_CYLINDER_SET-group </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_CYLINDER_SET-group>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_CYLINDER_SET/cardinality-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_CYLINDER_SET/cardinality-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_CYLINDER_SET/center-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_CYLINDER_SET/center-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_CYLINDER_SET/dimensionality-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_CYLINDER_SET/dimensionality-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_CYLINDER_SET/height-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_CYLINDER_SET/height-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_CYLINDER_SET/identifier_offset-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_CYLINDER_SET/identifier_offset-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_CYLINDER_SET/radii-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_CYLINDER_SET/radii-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_ELLIPSOID_SET-group </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_ELLIPSOID_SET-group>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_ELLIPSOID_SET/cardinality-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_ELLIPSOID_SET/cardinality-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_ELLIPSOID_SET/center-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_ELLIPSOID_SET/center-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_ELLIPSOID_SET/dimensionality-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_ELLIPSOID_SET/dimensionality-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_ELLIPSOID_SET/half_axes_radii-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_ELLIPSOID_SET/half_axes_radii-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_ELLIPSOID_SET/identifier_offset-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_ELLIPSOID_SET/identifier_offset-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_ELLIPSOID_SET/orientation-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_ELLIPSOID_SET/orientation-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_HEXAHEDRON_SET-group </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_HEXAHEDRON_SET-group>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_HEXAHEDRON_SET/cardinality-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_HEXAHEDRON_SET/cardinality-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_HEXAHEDRON_SET/dimensionality-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_HEXAHEDRON_SET/dimensionality-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_HEXAHEDRON_SET/hexahedra-group </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_HEXAHEDRON_SET/hexahedra-group>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_HEXAHEDRON_SET/identifier_offset-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CG_HEXAHEDRON_SET/identifier_offset-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CS_FILTER_BOOLEAN_MASK-group </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CS_FILTER_BOOLEAN_MASK-group>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CS_FILTER_BOOLEAN_MASK/bitdepth-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CS_FILTER_BOOLEAN_MASK/bitdepth-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CS_FILTER_BOOLEAN_MASK/identifier-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CS_FILTER_BOOLEAN_MASK/identifier-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CS_FILTER_BOOLEAN_MASK/mask-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CS_FILTER_BOOLEAN_MASK/mask-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CS_FILTER_BOOLEAN_MASK/number_of_objects-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/CS_FILTER_BOOLEAN_MASK/number_of_objects-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/windowing_method-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/spatial_filter/windowing_method-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/surface_meshing-group </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/surface_meshing-group>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/surface_meshing/alpha_value_choice-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/surface_meshing/alpha_value_choice-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/surface_meshing/alpha_values-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/surface_meshing/alpha_values-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/surface_meshing/has_closure-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/surface_meshing/has_closure-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/surface_meshing/has_exterior_facets-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/surface_meshing/has_exterior_facets-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/surface_meshing/has_interior_tetrahedra-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/surface_meshing/has_interior_tetrahedra-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/surface_meshing/offset_values-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/surface_meshing/offset_values-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/surface_meshing/preprocessing_kernel_width-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/surface_meshing/preprocessing_kernel_width-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/surface_meshing/preprocessing_method-field </NXapm_paraprobe_config_surfacer/ENTRY/PROCESS/surface_meshing/preprocessing_method-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/program-field </NXapm_paraprobe_config_surfacer/ENTRY/program-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/program@version-attribute </NXapm_paraprobe_config_surfacer/ENTRY/program@version-attribute>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/results_path-field </NXapm_paraprobe_config_surfacer/ENTRY/results_path-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY/time_stamp-field </NXapm_paraprobe_config_surfacer/ENTRY/time_stamp-field>`
* :ref:`/NXapm_paraprobe_config_surfacer/ENTRY@version-attribute </NXapm_paraprobe_config_surfacer/ENTRY@version-attribute>`

**NXDL Source**:
  https://github.com/nexusformat/definitions/blob/main/contributed_definitions/NXapm_paraprobe_config_surfacer.nxdl.xml
