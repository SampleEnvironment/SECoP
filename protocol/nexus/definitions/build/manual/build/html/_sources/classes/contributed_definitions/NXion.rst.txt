.. auto-generated by dev_tools.docs.nxdl from the NXDL source contributed_definitions/NXion.nxdl.xml -- DO NOT EDIT

.. index::
    ! NXion (base class)
    ! ion (base class)
    see: ion (base class); NXion

.. _NXion:

=====
NXion
=====

**Status**:

  base class, extends :ref:`NXobject`

**Description**:

  Set of atoms of a molecular ion or fragment in e.g. ToF mass spectrometry.

**Symbols**:

  The symbols used in the schema to specify e.g. dimensions of arrays.

  **n_ivecmax**: Maximum number of atoms/isotopes allowed per (molecular) ion (fragment).

  **n_ranges**: Number of mass-to-charge-state-ratio range intervals for ion type.

**Groups cited**:
  none

**Structure**:

  .. _/NXion/identifier-field:

  .. index:: identifier (field)

  **identifier**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    .. collapse:: A unique identifier whereby such an ion can be referred to ...

        A unique identifier whereby such an ion can be referred to
        via the service offered as described in identifier_type.

  .. _/NXion/identifier_type-field:

  .. index:: identifier_type (field)

  **identifier_type**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    .. collapse:: How can the identifier be resolved? ...

        How can the identifier be resolved?

        Obligatory value: ``inchi``

  .. _/NXion/ion_type-field:

  .. index:: ion_type (field)

  **ion_type**: (optional) :ref:`NX_UINT <NX_UINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

    .. collapse:: Ion type (ion species) identifier. The identifier zero ...

        Ion type (ion species) identifier. The identifier zero
        is reserved for the special unknown ion type.

  .. _/NXion/isotope_vector-field:

  .. index:: isotope_vector (field)

  **isotope_vector**: (optional) :ref:`NX_UINT <NX_UINT>` (Rank: 2, Dimensions: [1, n_ivecmax]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

    .. collapse:: A vector of isotope hash values. ...

        A vector of isotope hash values.
        These values have to be stored in an array, sorted in decreasing order.
        The array is filled with zero hash values indicating unused places.
        The individual hash values are built with the following hash function:

        The hash value :math:`H` is :math:`H = Z + N*256` with :math:`Z`
        the number of protons and :math:`N` the number of neutrons
        of each isotope respectively.

        Z and N have to be 8-bit unsigned integers.
        For the rationale behind this `M. KÃ¼hbach et al. (2021) <https://doi.org/10.1017/S1431927621012241>`_

  .. _/NXion/nuclid_list-field:

  .. index:: nuclid_list (field)

  **nuclid_list**: (optional) :ref:`NX_UINT <NX_UINT>` (Rank: 2, Dimensions: [2, n_ivecmax]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

    .. collapse:: A supplementary row vector which decodes the isotope_vector into ...

        A supplementary row vector which decodes the isotope_vector into
        a human-readable matrix of nuclids with the following formatting:

        The first row specifies the isotope mass number, i.e. using the hashvalues
        from the isotope_vector this is :math:`Z + N`. As an example for a
        carbon-14 isotope the number is 14.
        The second row specifies the number of protons :math:`Z`, e.g. 6 for the
        carbon-14 example. This row matrix is thus a mapping the notation of
        using superscribed isotope mass and subscripted number of protons to
        identify isotopes.
        Unused places filling up to n_ivecmax need to be filled with zero.

  .. _/NXion/color-field:

  .. index:: color (field)

  **color**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    Color code used for visualizing such ions.

  .. _/NXion/volume-field:

  .. index:: volume (field)

  **volume**: (optional) :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_VOLUME <NX_VOLUME>`} 

    .. collapse:: Assumed volume of the ion. ...

        Assumed volume of the ion.

        In atom probe microscopy this field can be used to store the reconstructed
        volume per ion (average) which is typically stored in range files and will
        be used when building a tomographic reconstruction of an atom probe
        dataset.

  .. _/NXion/charge-field:

  .. index:: charge (field)

  **charge**: (optional) :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_CHARGE <NX_CHARGE>`} 

    Charge of the ion.

  .. _/NXion/charge_state-field:

  .. index:: charge_state (field)

  **charge_state**: (optional) :ref:`NX_INT <NX_INT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

    .. collapse:: Signed charge state of the ion in multiples of electron charge. ...

        Signed charge state of the ion in multiples of electron charge.

        Only positive values will be measured in atom probe microscopy as the
        ions are accelerated by a negatively signed bias electric field.
        In the case that the charge state is not explicitly recoverable,
        the value should be set to zero.

        In atom probe microscopy this is for example the case when using
        classical range file formats like RNG, RRNG for atom probe data.
        These file formats do not document the charge state explicitly.
        They report the number of atoms of each element per molecular ion
        surplus the mass-to-charge-state-ratio interval.
        With this it is possible to recover the charge state only for
        specific molecular ions as the accumulated mass of the molecular ion
        is defined by the isotopes, which without knowing the charge leads
        to an underconstrained problem.
        Details on ranging can be found in the literature: `M. K. Miller <https://doi.org/10.1002/sia.1719>`_

  .. _/NXion/name-field:

  .. index:: name (field)

  **name**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    .. collapse:: Human-readable ion type name (e.g. Al +++) ...

        Human-readable ion type name (e.g. Al +++)
        The string should consists of ASCII UTF-8 characters, 
        ideally using LaTeX notation to specify the isotopes, ions, and charge
        state. Examples are 12C + or Al +++.
        Although this name may be human-readable and intuitive, parsing such
        names becomes impractical for more complicated cases. Therefore, for the
        field of atom probe microscopy the isotope_vector should be the
        preferred machine-readable format to use.

  .. _/NXion/mass_to_charge_range-field:

  .. index:: mass_to_charge_range (field)

  **mass_to_charge_range**: (optional) :ref:`NX_FLOAT <NX_FLOAT>` (Rank: 2, Dimensions: [n_ranges, 2]) {units=\ :ref:`NX_ANY <NX_ANY>`} 

    .. collapse:: Associated lower (mqmin) and upper (mqmax) bounds of  ...

        Associated lower (mqmin) and upper (mqmax) bounds of 
        mass-to-charge-state ratio interval(s) [mqmin, mqmax]
        (boundaries included) for which the respective ion is one to be labelled
        with ion_identifier. The field is primarily of interest to document the
        result of indexing a ToF/mass spectrum.


Hypertext Anchors
-----------------

List of hypertext anchors for all groups, fields,
attributes, and links defined in this class.


* :ref:`/NXion/charge-field </NXion/charge-field>`
* :ref:`/NXion/charge_state-field </NXion/charge_state-field>`
* :ref:`/NXion/color-field </NXion/color-field>`
* :ref:`/NXion/identifier-field </NXion/identifier-field>`
* :ref:`/NXion/identifier_type-field </NXion/identifier_type-field>`
* :ref:`/NXion/ion_type-field </NXion/ion_type-field>`
* :ref:`/NXion/isotope_vector-field </NXion/isotope_vector-field>`
* :ref:`/NXion/mass_to_charge_range-field </NXion/mass_to_charge_range-field>`
* :ref:`/NXion/name-field </NXion/name-field>`
* :ref:`/NXion/nuclid_list-field </NXion/nuclid_list-field>`
* :ref:`/NXion/volume-field </NXion/volume-field>`

**NXDL Source**:
  https://github.com/nexusformat/definitions/blob/main/contributed_definitions/NXion.nxdl.xml
