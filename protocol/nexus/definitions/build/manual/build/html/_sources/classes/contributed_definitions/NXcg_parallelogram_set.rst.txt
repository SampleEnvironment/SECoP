.. auto-generated by dev_tools.docs.nxdl from the NXDL source contributed_definitions/NXcg_parallelogram_set.nxdl.xml -- DO NOT EDIT

.. index::
    ! NXcg_parallelogram_set (base class)
    ! cg_parallelogram_set (base class)
    see: cg_parallelogram_set (base class); NXcg_parallelogram_set

.. _NXcg_parallelogram_set:

======================
NXcg_parallelogram_set
======================

**Status**:

  base class, extends :ref:`NXobject`

**Description**:

  .. collapse:: Computational geometry description of a set of parallelograms in Euclidean space ...

      Computational geometry description of a set of parallelograms in Euclidean space.

      The parallelograms do not have to be connected, can have different size,
      can intersect, and be rotated.
      This class can also be used to describe rectangles or squares, axis-aligned or not.
      The class represents different access and description levels to offer both
      applied scientists and computational geometry experts to use the same
      base class but rather their specific view on the data:

      * Most simple many experimentalists wish to communicate dimensions/the size
        of e.g. a region of interest in the 2D plane. In this case the alignment
        with axes is not relevant as eventually relevant is only the area of the ROI.
      * In other cases the extent of the parallelogram is relevant though.
      * Finally in CAD models we would like to specify the polygon
        which is parallelogram represents.

      Parallelograms are important geometrical primitives. Not so much because of their
      uses in nowadays, thanks to improvements in computing power, not so frequently
      any longer performed 2D simulation. Many scanning experiments probe though
      parallelogram-shaped ROIs on the surface of samples.

      Parallelograms have to be non-degenerated, closed, and built of polygons
      which are not self-intersecting.

      The term parallelogram will be used throughout this base class but includes
      the especially in engineering and more commonly used special cases,
      rectangle, square, 2D box, axis-aligned bounding box (AABB), or
      optimal bounding box (OBB) but here the analogous 2D cases.

      An axis-aligned bounding box is a common data object in computational science
      and codes to represent a rectangle whose edges are aligned with the axes 
      of a coordinate system. As a part of binary trees these are important data
      objects for time- as well as space-efficient queries
      of geometric primitives in techniques like kd-trees.

      An optimal bounding box is a common data object which provides the best
      tight fitting box about an arbitrary object. In general such boxes are
      rotated. Other than in 3D dimensions the rotation calipher method offers
      a rigorous approach to compute optimal bounding boxes in 2D.

**Symbols**:

  The symbols used in the schema to specify e.g. dimensions of arrays.

  **c**: The cardinality of the set, i.e. the number of parallelograms.

**Groups cited**:
  :ref:`NXcg_face_list_data_structure`, :ref:`NXcg_unit_normal_set`, :ref:`NXorientation_set`, :ref:`NXtransformations`

.. index:: NXtransformations (base class); used in base class, NXorientation_set (base class); used in base class, NXcg_unit_normal_set (base class); used in base class, NXcg_face_list_data_structure (base class); used in base class

**Structure**:

  .. _/NXcg_parallelogram_set/dimensionality-field:

  .. index:: dimensionality (field)

  **dimensionality**: (optional) :ref:`NX_POSINT <NX_POSINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 


    Obligatory value: ``2``

  .. _/NXcg_parallelogram_set/cardinality-field:

  .. index:: cardinality (field)

  **cardinality**: (optional) :ref:`NX_POSINT <NX_POSINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 


  .. _/NXcg_parallelogram_set/shape-field:

  .. index:: shape (field)

  **shape**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 2, Dimensions: [c, 2]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

    A qualitative description of each parallelogram/rectangle/square/box.

  .. _/NXcg_parallelogram_set/length-field:

  .. index:: length (field)

  **length**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [c]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

    .. collapse:: Qualifier how one edge is longer than all the other edge of the parallelogam. ...

        Qualifier how one edge is longer than all the other edge of the parallelogam.
        Often the term length is associated with one edge being parallel to
        an axis of the coordinate system.

  .. _/NXcg_parallelogram_set/width-field:

  .. index:: width (field)

  **width**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [c]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

    .. collapse:: Qualifier often used to describe the length of an edge within ...

        Qualifier often used to describe the length of an edge within
        a specific coordinate system.

  .. _/NXcg_parallelogram_set/center-field:

  .. index:: center (field)

  **center**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 2, Dimensions: [c, 2]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

    .. collapse:: Position of the geometric center, which often is but not necessarily ...

        Position of the geometric center, which often is but not necessarily
        has to be the center_of_mass of the parallelogram.

  .. _/NXcg_parallelogram_set/surface_area-field:

  .. index:: surface_area (field)

  **surface_area**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [c]) {units=\ :ref:`NX_AREA <NX_AREA>`} 


  .. _/NXcg_parallelogram_set/is_axis_aligned-field:

  .. index:: is_axis_aligned (field)

  **is_axis_aligned**: (optional) :ref:`NX_BOOLEAN <NX_BOOLEAN>` (Rank: 1, Dimensions: [c]) 

    .. collapse:: Only to be used if is_box is present. In this case, this field describes ...

        Only to be used if is_box is present. In this case, this field describes
        whether parallelograms are rectangles/squares whose primary edges
        are parallel to the axes of the Cartesian coordinate system.

  .. _/NXcg_parallelogram_set/identifier_offset-field:

  .. index:: identifier_offset (field)

  **identifier_offset**: (optional) :ref:`NX_INT <NX_INT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

    .. collapse:: Integer which specifies the first index to be used for distinguishing ...

        Integer which specifies the first index to be used for distinguishing
        parallelograms. Identifiers are defined either implicitly
        or explicitly. For implicit indexing the identifiers are defined on the
        interval [identifier_offset, identifier_offset+c-1].
        For explicit indexing the identifier array has to be defined.

        The identifier_offset field can for example be used to communicate if the
        identifiers are expected to start from 1 (referred to as Fortran-/Matlab-)
        or from 0 (referred to as C-, Python-style index notation) respectively.

  .. _/NXcg_parallelogram_set/identifier-field:

  .. index:: identifier (field)

  **identifier**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 1, Dimensions: [c]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

    Integer used to distinguish parallelograms for explicit indexing.

  .. _/NXcg_parallelogram_set/TRANSFORMATIONS-group:

  **TRANSFORMATIONS**: (optional) :ref:`NXtransformations` 

    .. collapse:: Reference to or definition of a coordinate system with ...

        Reference to or definition of a coordinate system with
        which the qualifiers and mesh data are interpretable.

  .. _/NXcg_parallelogram_set/orientation-group:

  **orientation**: (optional) :ref:`NXorientation_set` 


  .. _/NXcg_parallelogram_set/vertex_normal-group:

  **vertex_normal**: (optional) :ref:`NXcg_unit_normal_set` 


  .. _/NXcg_parallelogram_set/edge_normal-group:

  **edge_normal**: (optional) :ref:`NXcg_unit_normal_set` 


  .. _/NXcg_parallelogram_set/face_normal-group:

  **face_normal**: (optional) :ref:`NXcg_unit_normal_set` 


  .. _/NXcg_parallelogram_set/parallelograms-group:

  **parallelograms**: (optional) :ref:`NXcg_face_list_data_structure` 

    .. collapse:: A simple approach to describe the entire set of parallelograms when the ...

        A simple approach to describe the entire set of parallelograms when the
        main intention is to store the shape of the parallelograms for visualization.

  .. _/NXcg_parallelogram_set/parallelogram-group:

  **parallelogram**: (optional) :ref:`NXcg_face_list_data_structure` 

    Disentangled representations of the mesh of specific parallelograms.


Hypertext Anchors
-----------------

List of hypertext anchors for all groups, fields,
attributes, and links defined in this class.


* :ref:`/NXcg_parallelogram_set/cardinality-field </NXcg_parallelogram_set/cardinality-field>`
* :ref:`/NXcg_parallelogram_set/center-field </NXcg_parallelogram_set/center-field>`
* :ref:`/NXcg_parallelogram_set/dimensionality-field </NXcg_parallelogram_set/dimensionality-field>`
* :ref:`/NXcg_parallelogram_set/edge_normal-group </NXcg_parallelogram_set/edge_normal-group>`
* :ref:`/NXcg_parallelogram_set/face_normal-group </NXcg_parallelogram_set/face_normal-group>`
* :ref:`/NXcg_parallelogram_set/identifier-field </NXcg_parallelogram_set/identifier-field>`
* :ref:`/NXcg_parallelogram_set/identifier_offset-field </NXcg_parallelogram_set/identifier_offset-field>`
* :ref:`/NXcg_parallelogram_set/is_axis_aligned-field </NXcg_parallelogram_set/is_axis_aligned-field>`
* :ref:`/NXcg_parallelogram_set/length-field </NXcg_parallelogram_set/length-field>`
* :ref:`/NXcg_parallelogram_set/orientation-group </NXcg_parallelogram_set/orientation-group>`
* :ref:`/NXcg_parallelogram_set/parallelogram-group </NXcg_parallelogram_set/parallelogram-group>`
* :ref:`/NXcg_parallelogram_set/parallelograms-group </NXcg_parallelogram_set/parallelograms-group>`
* :ref:`/NXcg_parallelogram_set/shape-field </NXcg_parallelogram_set/shape-field>`
* :ref:`/NXcg_parallelogram_set/surface_area-field </NXcg_parallelogram_set/surface_area-field>`
* :ref:`/NXcg_parallelogram_set/TRANSFORMATIONS-group </NXcg_parallelogram_set/TRANSFORMATIONS-group>`
* :ref:`/NXcg_parallelogram_set/vertex_normal-group </NXcg_parallelogram_set/vertex_normal-group>`
* :ref:`/NXcg_parallelogram_set/width-field </NXcg_parallelogram_set/width-field>`

**NXDL Source**:
  https://github.com/nexusformat/definitions/blob/main/contributed_definitions/NXcg_parallelogram_set.nxdl.xml
