.. auto-generated by dev_tools.docs.nxdl from the NXDL source base_classes/NXfermi_chopper.nxdl.xml -- DO NOT EDIT

.. index::
    ! NXfermi_chopper (base class)
    ! fermi_chopper (base class)
    see: fermi_chopper (base class); NXfermi_chopper

.. _NXfermi_chopper:

===============
NXfermi_chopper
===============

**Status**:

  base class, extends :ref:`NXobject`

**Description**:

  A Fermi chopper, possibly with curved slits.

**Symbols**:

  No symbol table

**Groups cited**:
  :ref:`NXgeometry`, :ref:`NXoff_geometry`, :ref:`NXtransformations`

.. index:: NXgeometry (base class); used in base class, NXoff_geometry (base class); used in base class, NXtransformations (base class); used in base class

**Structure**:

  .. _/NXfermi_chopper@default-attribute:

  .. index:: default (file attribute)

  **@default**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    .. collapse:: Declares which child group contains a path leading  ...

        .. index:: plotting

        Declares which child group contains a path leading 
        to a :ref:`NXdata` group.

        It is recommended (as of NIAC2014) to use this attribute
        to help define the path to the default dataset to be plotted.
        See https://www.nexusformat.org/2014_How_to_find_default_data.html
        for a summary of the discussion.

  .. _/NXfermi_chopper/type-field:

  .. index:: type (field)

  **type**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    Fermi chopper type

  .. _/NXfermi_chopper/rotation_speed-field:

  .. index:: rotation_speed (field)

  **rotation_speed**: (optional) :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_FREQUENCY <NX_FREQUENCY>`} 

    chopper rotation speed

  .. _/NXfermi_chopper/radius-field:

  .. index:: radius (field)

  **radius**: (optional) :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

    radius of chopper

  .. _/NXfermi_chopper/slit-field:

  .. index:: slit (field)

  **slit**: (optional) :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

    width of an individual slit

  .. _/NXfermi_chopper/r_slit-field:

  .. index:: r_slit (field)

  **r_slit**: (optional) :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

    radius of curvature of slits

  .. _/NXfermi_chopper/number-field:

  .. index:: number (field)

  **number**: (optional) :ref:`NX_INT <NX_INT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

    number of slits

  .. _/NXfermi_chopper/height-field:

  .. index:: height (field)

  **height**: (optional) :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

    input beam height

  .. _/NXfermi_chopper/width-field:

  .. index:: width (field)

  **width**: (optional) :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

    input beam width

  .. _/NXfermi_chopper/distance-field:

  .. index:: distance (field)

  **distance**: (optional) :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

    distance. Note, it is recommended to use NXtransformations instead.

  .. _/NXfermi_chopper/wavelength-field:

  .. index:: wavelength (field)

  **wavelength**: (optional) :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_WAVELENGTH <NX_WAVELENGTH>`} 

    Wavelength transmitted by chopper

  .. _/NXfermi_chopper/energy-field:

  .. index:: energy (field)

  **energy**: (optional) :ref:`NX_FLOAT <NX_FLOAT>` {units=\ :ref:`NX_ENERGY <NX_ENERGY>`} 

    energy selected

  .. _/NXfermi_chopper/absorbing_material-field:

  .. index:: absorbing_material (field)

  **absorbing_material**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    absorbing material

  .. _/NXfermi_chopper/transmitting_material-field:

  .. index:: transmitting_material (field)

  **transmitting_material**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    transmitting material

  .. _/NXfermi_chopper/depends_on-field:

  .. index:: depends_on (field)

  **depends_on**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

    .. collapse:: NeXus positions components by applying a set of translations and rotations ...

        NeXus positions components by applying a set of translations and rotations
        to apply to the component starting from 0, 0, 0. The order of these operations
        is critical and forms what NeXus calls a dependency chain. The depends_on
        field defines the path to the top most operation of the dependency chain or the
        string "." if located in the origin. Usually these operations are stored in a
        NXtransformations group. But NeXus allows them to be stored anywhere.

        .. todo::
          Add a definition for the reference point of a fermi chopper.


  .. _/NXfermi_chopper/GEOMETRY-group:

  **GEOMETRY**: (optional) :ref:`NXgeometry` 


    .. index:: deprecated


    **DEPRECATED**: Use the field `depends_on` and :ref:`NXtransformations` to position the chopper and NXoff_geometry to describe its shape instead

    geometry of the fermi chopper

  .. _/NXfermi_chopper/OFF_GEOMETRY-group:

  **OFF_GEOMETRY**: (optional) :ref:`NXoff_geometry` 

    This group describes the shape of the beam line component

  .. _/NXfermi_chopper/TRANSFORMATIONS-group:

  **TRANSFORMATIONS**: (optional) :ref:`NXtransformations` 

    .. collapse:: This is the group recommended for holding the chain of translation ...

        This is the group recommended for holding the chain of translation
        and rotation operations necessary to position the component within
        the instrument. The dependency chain may however traverse similar groups in
        other component groups.


Hypertext Anchors
-----------------

List of hypertext anchors for all groups, fields,
attributes, and links defined in this class.


* :ref:`/NXfermi_chopper/absorbing_material-field </NXfermi_chopper/absorbing_material-field>`
* :ref:`/NXfermi_chopper/depends_on-field </NXfermi_chopper/depends_on-field>`
* :ref:`/NXfermi_chopper/distance-field </NXfermi_chopper/distance-field>`
* :ref:`/NXfermi_chopper/energy-field </NXfermi_chopper/energy-field>`
* :ref:`/NXfermi_chopper/GEOMETRY-group </NXfermi_chopper/GEOMETRY-group>`
* :ref:`/NXfermi_chopper/height-field </NXfermi_chopper/height-field>`
* :ref:`/NXfermi_chopper/number-field </NXfermi_chopper/number-field>`
* :ref:`/NXfermi_chopper/OFF_GEOMETRY-group </NXfermi_chopper/OFF_GEOMETRY-group>`
* :ref:`/NXfermi_chopper/r_slit-field </NXfermi_chopper/r_slit-field>`
* :ref:`/NXfermi_chopper/radius-field </NXfermi_chopper/radius-field>`
* :ref:`/NXfermi_chopper/rotation_speed-field </NXfermi_chopper/rotation_speed-field>`
* :ref:`/NXfermi_chopper/slit-field </NXfermi_chopper/slit-field>`
* :ref:`/NXfermi_chopper/TRANSFORMATIONS-group </NXfermi_chopper/TRANSFORMATIONS-group>`
* :ref:`/NXfermi_chopper/transmitting_material-field </NXfermi_chopper/transmitting_material-field>`
* :ref:`/NXfermi_chopper/type-field </NXfermi_chopper/type-field>`
* :ref:`/NXfermi_chopper/wavelength-field </NXfermi_chopper/wavelength-field>`
* :ref:`/NXfermi_chopper/width-field </NXfermi_chopper/width-field>`
* :ref:`/NXfermi_chopper@default-attribute </NXfermi_chopper@default-attribute>`

**NXDL Source**:
  https://github.com/nexusformat/definitions/blob/main/base_classes/NXfermi_chopper.nxdl.xml
