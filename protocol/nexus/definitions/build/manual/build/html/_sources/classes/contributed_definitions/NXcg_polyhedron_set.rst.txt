.. auto-generated by dev_tools.docs.nxdl from the NXDL source contributed_definitions/NXcg_polyhedron_set.nxdl.xml -- DO NOT EDIT

.. index::
    ! NXcg_polyhedron_set (base class)
    ! cg_polyhedron_set (base class)
    see: cg_polyhedron_set (base class); NXcg_polyhedron_set

.. _NXcg_polyhedron_set:

===================
NXcg_polyhedron_set
===================

**Status**:

  base class, extends :ref:`NXobject`

**Description**:

  .. collapse:: Computational geometry description of a polyhedra in Euclidean space. ...

      Computational geometry description of a polyhedra in Euclidean space.

      Polyhedra, also so-called cells (especially in the convex of tessellations),
      here described have to be all non-degenerated, closed, built of and thus
      built out of not-self-intersecting polygon meshes. Polyhedra may make contact,
      so that this base class can be used for a future description of tessellations.

      For more complicated manifolds and especially for polyhedra with holes, users
      are advised to check if their particular needs are described by creating
      (eventually customized) instances of an NXcg_polygon_set, which can be
      extended for the description of piecewise-linear complexes.

**Symbols**:

  The symbols used in the schema to specify e.g. dimensions of arrays.

  **c**: The cardinality of the set, i.e. the number of polyhedra.

  **n_e_total**: The total number of edges for all polyhedra.

  **n_f_total**: The total number of faces for all polyhedra.

**Groups cited**:
  :ref:`NXcg_face_list_data_structure`, :ref:`NXcg_half_edge_data_structure`, :ref:`NXcg_unit_normal_set`, :ref:`NXtransformations`

.. index:: NXtransformations (base class); used in base class, NXcg_unit_normal_set (base class); used in base class, NXcg_face_list_data_structure (base class); used in base class, NXcg_half_edge_data_structure (base class); used in base class

**Structure**:

  .. _/NXcg_polyhedron_set/dimensionality-field:

  .. index:: dimensionality (field)

  **dimensionality**: (optional) :ref:`NX_POSINT <NX_POSINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 


    Obligatory value: ``3``

  .. _/NXcg_polyhedron_set/cardinality-field:

  .. index:: cardinality (field)

  **cardinality**: (optional) :ref:`NX_POSINT <NX_POSINT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 


  .. _/NXcg_polyhedron_set/volume-field:

  .. index:: volume (field)

  **volume**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [c]) {units=\ :ref:`NX_VOLUME <NX_VOLUME>`} 

    Interior volume

  .. _/NXcg_polyhedron_set/center-field:

  .. index:: center (field)

  **center**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 2, Dimensions: [c, 3]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

    .. collapse:: Position of the geometric center, which often is but not necessarily ...

        Position of the geometric center, which often is but not necessarily
        has to be the center_of_mass of the polyhedra.

  .. _/NXcg_polyhedron_set/surface_area-field:

  .. index:: surface_area (field)

  **surface_area**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [c]) {units=\ :ref:`NX_AREA <NX_AREA>`} 

    Total surface area as the sum of all faces.

  .. _/NXcg_polyhedron_set/number_of_faces-field:

  .. index:: number_of_faces (field)

  **number_of_faces**: (optional) :ref:`NX_POSINT <NX_POSINT>` (Rank: 1, Dimensions: [c]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

    .. collapse:: The number of faces for each polyhedron. Faces of adjoining polyhedra ...

        The number of faces for each polyhedron. Faces of adjoining polyhedra
        are counted for each polyhedron. This field can be used to interpret
        the array/field with the individual area values for each face.

  .. _/NXcg_polyhedron_set/face_area-field:

  .. index:: face_area (field)

  **face_area**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [n_f_total]) {units=\ :ref:`NX_AREA <NX_AREA>`} 

    Area of each of the four triangular faces of each tetrahedron.

  .. _/NXcg_polyhedron_set/number_of_edges-field:

  .. index:: number_of_edges (field)

  **number_of_edges**: (optional) :ref:`NX_POSINT <NX_POSINT>` 

    .. collapse:: The number of edges for each polyhedron. Edges of adjoining polyhedra ...

        The number of edges for each polyhedron. Edges of adjoining polyhedra
        are counterd for each polyhedron. This field can be used to interpret
        the array/field with the individual length for each edge.

  .. _/NXcg_polyhedron_set/edge_length-field:

  .. index:: edge_length (field)

  **edge_length**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [n_e_total]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

    Length of each edge of each tetrahedron.

  .. _/NXcg_polyhedron_set/identifier_offset-field:

  .. index:: identifier_offset (field)

  **identifier_offset**: (optional) :ref:`NX_INT <NX_INT>` {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

    .. collapse:: Integer which specifies the first index to be used for distinguishing ...

        Integer which specifies the first index to be used for distinguishing
        polyhedra. Identifiers are defined either implicitly
        or explicitly. For implicit indexing the identifiers are defined on the
        interval [identifier_offset, identifier_offset+c-1].
        For explicit indexing the identifier array has to be defined.

        The identifier_offset field can for example be used to communicate if the
        identifiers are expected to start from 1 (referred to as Fortran-/Matlab-)
        or from 0 (referred to as C-, Python-style index notation) respectively.

  .. _/NXcg_polyhedron_set/identifier-field:

  .. index:: identifier (field)

  **identifier**: (optional) :ref:`NX_INT <NX_INT>` (Rank: 1, Dimensions: [c]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

    Integer used to distinguish polyhedra for explicit indexing.

  .. _/NXcg_polyhedron_set/TRANSFORMATIONS-group:

  **TRANSFORMATIONS**: (optional) :ref:`NXtransformations` 

    .. collapse:: Reference to or definition of a coordinate system with ...

        Reference to or definition of a coordinate system with
        which the qualifiers and mesh data are interpretable.

  .. _/NXcg_polyhedron_set/vertex_normal-group:

  **vertex_normal**: (optional) :ref:`NXcg_unit_normal_set` 


  .. _/NXcg_polyhedron_set/edge_normal-group:

  **edge_normal**: (optional) :ref:`NXcg_unit_normal_set` 


  .. _/NXcg_polyhedron_set/face_normal-group:

  **face_normal**: (optional) :ref:`NXcg_unit_normal_set` 


  .. _/NXcg_polyhedron_set/polyhedra-group:

  **polyhedra**: (optional) :ref:`NXcg_face_list_data_structure` 

    .. collapse:: A simple approach to describe the entire set of polyhedra when the ...

        A simple approach to describe the entire set of polyhedra when the
        main intention is to store the shape of the polyhedra for visualization.

  .. _/NXcg_polyhedron_set/polyhedron-group:

  **polyhedron**: (optional) :ref:`NXcg_face_list_data_structure` 

    Disentangled representations of the mesh of specific polyhedron.

  .. _/NXcg_polyhedron_set/polyhedron_half_edge-group:

  **polyhedron_half_edge**: (optional) :ref:`NXcg_half_edge_data_structure` 

    .. collapse:: Disentangled representation of the planar graph that each polyhedron ...

        Disentangled representation of the planar graph that each polyhedron
        represents. Such a description simplifies topological processing
        or analyses of mesh primitive operations and neighborhood queries.


Hypertext Anchors
-----------------

List of hypertext anchors for all groups, fields,
attributes, and links defined in this class.


* :ref:`/NXcg_polyhedron_set/cardinality-field </NXcg_polyhedron_set/cardinality-field>`
* :ref:`/NXcg_polyhedron_set/center-field </NXcg_polyhedron_set/center-field>`
* :ref:`/NXcg_polyhedron_set/dimensionality-field </NXcg_polyhedron_set/dimensionality-field>`
* :ref:`/NXcg_polyhedron_set/edge_length-field </NXcg_polyhedron_set/edge_length-field>`
* :ref:`/NXcg_polyhedron_set/edge_normal-group </NXcg_polyhedron_set/edge_normal-group>`
* :ref:`/NXcg_polyhedron_set/face_area-field </NXcg_polyhedron_set/face_area-field>`
* :ref:`/NXcg_polyhedron_set/face_normal-group </NXcg_polyhedron_set/face_normal-group>`
* :ref:`/NXcg_polyhedron_set/identifier-field </NXcg_polyhedron_set/identifier-field>`
* :ref:`/NXcg_polyhedron_set/identifier_offset-field </NXcg_polyhedron_set/identifier_offset-field>`
* :ref:`/NXcg_polyhedron_set/number_of_edges-field </NXcg_polyhedron_set/number_of_edges-field>`
* :ref:`/NXcg_polyhedron_set/number_of_faces-field </NXcg_polyhedron_set/number_of_faces-field>`
* :ref:`/NXcg_polyhedron_set/polyhedra-group </NXcg_polyhedron_set/polyhedra-group>`
* :ref:`/NXcg_polyhedron_set/polyhedron-group </NXcg_polyhedron_set/polyhedron-group>`
* :ref:`/NXcg_polyhedron_set/polyhedron_half_edge-group </NXcg_polyhedron_set/polyhedron_half_edge-group>`
* :ref:`/NXcg_polyhedron_set/surface_area-field </NXcg_polyhedron_set/surface_area-field>`
* :ref:`/NXcg_polyhedron_set/TRANSFORMATIONS-group </NXcg_polyhedron_set/TRANSFORMATIONS-group>`
* :ref:`/NXcg_polyhedron_set/vertex_normal-group </NXcg_polyhedron_set/vertex_normal-group>`
* :ref:`/NXcg_polyhedron_set/volume-field </NXcg_polyhedron_set/volume-field>`

**NXDL Source**:
  https://github.com/nexusformat/definitions/blob/main/contributed_definitions/NXcg_polyhedron_set.nxdl.xml
