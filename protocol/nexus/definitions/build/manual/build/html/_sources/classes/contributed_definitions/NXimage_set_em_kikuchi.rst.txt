.. auto-generated by dev_tools.docs.nxdl from the NXDL source contributed_definitions/NXimage_set_em_kikuchi.nxdl.xml -- DO NOT EDIT

.. index::
    ! NXimage_set_em_kikuchi (base class)
    ! image_set_em_kikuchi (base class)
    see: image_set_em_kikuchi (base class); NXimage_set_em_kikuchi

.. _NXimage_set_em_kikuchi:

======================
NXimage_set_em_kikuchi
======================

**Status**:

  base class, extends :ref:`NXobject`

**Description**:

  .. collapse:: Measured set of electron backscatter diffraction data, aka Kikuchi pattern. ...

      Measured set of electron backscatter diffraction data, aka Kikuchi pattern.
      Kikuchi pattern are the raw data for computational workflows in the field
      of orientation (imaging) microscopy. The technique is especially used in
      materials science and materials engineering.

      Based on a fuse of the `M. A. Jackson et al. <https://doi.org/10.1186/2193-9772-3-4>`_
      of the DREAM.3D community and the open H5OINA format of Oxford Instruments
      `P. Pinard et al. <https://doi.org/10.1017/S1431927621006103>`_

      EBSD can be used, usually with FIB/SEM microscopes, for three-dimensional
      orientation microscopy. So-called serial section analyses. For a detailed
      overview of these techniques see e.g.

      * `M. A. Groeber et al. <https://doi.org/10.1186/2193-9772-3-5>`_  
      * `A. J. Schwartz et al. <https://doi.org/10.1007/978-1-4757-3205-4>`_  
      * `P. A. Rottman et al. <https://doi.org/10.1016/j.mattod.2021.05.003>`_

      With serial-sectioning this involves however always a sequence of measuring,
      milling. In this regard, each serial section (measuring) and milling
      is an own NXevent_data_em instance and thus there such a three-dimensional
      characterization should be stored as a set of two-dimensional data,
      with as many NXevent_data_em instances as sections were measured.

      These measured serial sectioning images need virtually always post-processing
      to arrive at the aligned and cleaned image stack before a respective digital
      model of the inspected microstructure can be analyzed. The resulting volume
      is often termed a so-called (representative) volume element (RVE).
      Several software packages are available for performing this post-processing.
      For now we do not consider metadata of these post-processing steps
      as a part of this base class because the connection between the large variety
      of such post-processing steps and the measured electron microscopy data
      is usually very small.

      If we envision a (knowledge) graph for EBSD it consists of individual
      sub-graphs which convey information about the specimen preparation,
      the measurement of the specimen in the electron microscope,
      the indexing of the collected Kikuchi pattern stack,
      eventual post-processing of the indexed orientation image
      via similarity grouping algorithms to yield (grains, texture).
      Conceptually these post-processing steps are most frequently
      serving the idea to reconstruct quantitatively so-called
      microstructural features (grains, phases, interfaces). Materials scientists
      use these features according to the multi-scale materials modeling paradigm
      to infer material properties. They do so by quantifying correlations between
      the spatial arrangement of the features, their individual properties,
      and (macroscopic) properties of materials.

**Symbols**:


  **n_sc**: Number of scanned points. Scan point may have none, one, or more pattern.

  **n_p**: Number of diffraction pattern.

  **n_y**: Number of pixel per Kikuchi pattern in the slow direction.

  **n_x**: Number of pixel per Kikuchi pattern in the fast direction.

**Groups cited**:
  :ref:`NXdata`, :ref:`NXprocess`

.. index:: NXprocess (base class); used in base class, NXdata (base class); used in base class

**Structure**:

  .. _/NXimage_set_em_kikuchi/PROCESS-group:

  **PROCESS**: (optional) :ref:`NXprocess` 

    .. collapse:: Details how Kikuchi pattern were processed from the detector readings. ...

        Details how Kikuchi pattern were processed from the detector readings.
        Scientists interested in EBSD should inspect the respective NXem_ebsd
        application definition which can be used as a partner application definition
        to detail substantially more details to this processing.

  .. _/NXimage_set_em_kikuchi/stack-group:

  **stack**: (optional) :ref:`NXdata` 

    .. collapse:: Collected Kikuchi pattern as an image stack. As raw and closest to the ...

        Collected Kikuchi pattern as an image stack. As raw and closest to the
        first retrievable measured data as possible, i.e. do not use this
        container to store already averaged, filtered or whatever post-processed
        pattern unless these are generated unmodifiably by the instrument
        given the way how the instrument and control software was configured
        for your microscope session.

    .. _/NXimage_set_em_kikuchi/stack/scan_point_identifier-field:

    .. index:: scan_point_identifier (field)

    **scan_point_identifier**: (optional) :ref:`NX_UINT <NX_UINT>` (Rank: 1, Dimensions: [n_p]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      .. collapse:: Array which resolves the scan point to which each pattern belongs. ...

          Array which resolves the scan point to which each pattern belongs.
          Scan points are evaluated in sequence starting from scan point zero
          until scan point n_sc - 1. Evaluating the cumulated of this array
          decodes which pattern in intensity belong to which scan point.
          In an example we may assume we collected three scan points. For the first
          we measure one pattern, for the second we measure three pattern,
          for the last we measure no pattern.
          The values of scan_point_identifier will be 0, 1, 1, 1, as we have
          measured four pattern in total.

          In most cases usually one pattern is averaged by the detector for
          some amount of time and then reported as one pattern. Use compressed
          arrays allows to store the scan_point_identifier efficiently.

    .. _/NXimage_set_em_kikuchi/stack/data_counts-field:

    .. index:: data_counts (field)

    **data_counts**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 3, Dimensions: [n_p, n_y, n_x]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} :ref:`⤆ </NXdata/DATA-field>`

      .. collapse:: Signal intensity. For so-called three-dimensional or serial sectioning ...

          Signal intensity. For so-called three-dimensional or serial sectioning
          EBSD it is necessary to follow a sequence of specimen surface preparation
          and data collection. In this case users should collect the data for each
          serial sectioning step in an own instance of NXimage_set_em_kikuchi.
          All eventual post-processing of these measured data should be documented
          via NXebsd, resulting microstructure representations should be stored
          as NXms.

      .. _/NXimage_set_em_kikuchi/stack/data_counts@long_name-attribute:

      .. index:: long_name (field attribute)

      **@long_name**: (optional) :ref:`NX_CHAR <NX_CHAR>` :ref:`⤆ </NXdata/DATA@long_name-attribute>`

        Kikuchi pattern intensity

    .. _/NXimage_set_em_kikuchi/stack/pattern_identifier-field:

    .. index:: pattern_identifier (field)

    **pattern_identifier**: (optional) :ref:`NX_UINT <NX_UINT>` (Rank: 1, Dimensions: [n_p]) {units=\ :ref:`NX_UNITLESS <NX_UNITLESS>`} 

      Pattern are enumerated starting from 0 to n_p - 1.

      .. _/NXimage_set_em_kikuchi/stack/pattern_identifier@long_name-attribute:

      .. index:: long_name (field attribute)

      **@long_name**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

        Kikuchi pattern identifier

    .. _/NXimage_set_em_kikuchi/stack/axis_y-field:

    .. index:: axis_y (field)

    **axis_y**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [n_y]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

      Pixel coordinate along the y direction.

      .. _/NXimage_set_em_kikuchi/stack/axis_y@long_name-attribute:

      .. index:: long_name (field attribute)

      **@long_name**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

        Label for the y axis

    .. _/NXimage_set_em_kikuchi/stack/axis_x-field:

    .. index:: axis_x (field)

    **axis_x**: (optional) :ref:`NX_NUMBER <NX_NUMBER>` (Rank: 1, Dimensions: [n_x]) {units=\ :ref:`NX_LENGTH <NX_LENGTH>`} 

      Pixel coordinate along the x direction.

      .. _/NXimage_set_em_kikuchi/stack/axis_x@long_name-attribute:

      .. index:: long_name (field attribute)

      **@long_name**: (optional) :ref:`NX_CHAR <NX_CHAR>` 

        Label for the x axis


Hypertext Anchors
-----------------

List of hypertext anchors for all groups, fields,
attributes, and links defined in this class.


* :ref:`/NXimage_set_em_kikuchi/PROCESS-group </NXimage_set_em_kikuchi/PROCESS-group>`
* :ref:`/NXimage_set_em_kikuchi/stack-group </NXimage_set_em_kikuchi/stack-group>`
* :ref:`/NXimage_set_em_kikuchi/stack/axis_x-field </NXimage_set_em_kikuchi/stack/axis_x-field>`
* :ref:`/NXimage_set_em_kikuchi/stack/axis_x@long_name-attribute </NXimage_set_em_kikuchi/stack/axis_x@long_name-attribute>`
* :ref:`/NXimage_set_em_kikuchi/stack/axis_y-field </NXimage_set_em_kikuchi/stack/axis_y-field>`
* :ref:`/NXimage_set_em_kikuchi/stack/axis_y@long_name-attribute </NXimage_set_em_kikuchi/stack/axis_y@long_name-attribute>`
* :ref:`/NXimage_set_em_kikuchi/stack/data_counts-field </NXimage_set_em_kikuchi/stack/data_counts-field>`
* :ref:`/NXimage_set_em_kikuchi/stack/data_counts@long_name-attribute </NXimage_set_em_kikuchi/stack/data_counts@long_name-attribute>`
* :ref:`/NXimage_set_em_kikuchi/stack/pattern_identifier-field </NXimage_set_em_kikuchi/stack/pattern_identifier-field>`
* :ref:`/NXimage_set_em_kikuchi/stack/pattern_identifier@long_name-attribute </NXimage_set_em_kikuchi/stack/pattern_identifier@long_name-attribute>`
* :ref:`/NXimage_set_em_kikuchi/stack/scan_point_identifier-field </NXimage_set_em_kikuchi/stack/scan_point_identifier-field>`

**NXDL Source**:
  https://github.com/nexusformat/definitions/blob/main/contributed_definitions/NXimage_set_em_kikuchi.nxdl.xml
