Videoconference 2021-09-29
==========================

.. sidebar:: participants

     * Enrico Faulhaber
     * Lutz Rossa
     * Klaus Kiefer
     * Niklas Eckstr√∂m
     * Markus Zolliker
     * Bastian Klemke (joined later)


.. contents:: Contents
    :local:
    :depth: 2


Agenda
------

3-days meeting (30. Nov, 1./2. Dec).
   Collect issues to discuss, define meeting hours.

Issue 61: new predefined "property" implementation

Issue 67: names pid control parameters

Issue 63: enumeration of floating point values

Issue 66: force re-connect

Issue 64 / 68: multiple read / change commands


3-days meeting (30. Nov, 1./2. Dec).
++++++++++++++++++++++++++++++++++++

time:
    on nov 30(th): 10:00-12:00, on dec 1(st) and 2(nd): 10:30-12:00.

location:
    via zoom conference, link will be distributed in advance.

topics:
    all open issues, interface classes, parameter namings, etc...

Issue 61: new predefined property `implementation`
++++++++++++++++++++++++++++++++++++++++++++++++++

Klaus emphasises the need for a clear definition of the content of the properties.
A few examples seems to be nice.

minor side-discussion on how to proceed with such changes.

Markus will add a "changes" section to the current draft version of the spec,
listing the changes (and adding a few examples in the relevant (sub-)section(s)).

Issue 67: names pid control parameters
++++++++++++++++++++++++++++++++++++++

Enno proposes to have a predefined group name ("regulation"?) for all parameters
concerning a regulation functionality. having the p,i and d parameters named as
proposed is fine, though.

Conclusion of a small discussion: proposal accepted (3 individual parameters called
"pid_p", "pid_i" and "pid_d".) predefined group name proposed to next meeting.

Issue 63 enumeration of floating point values
+++++++++++++++++++++++++++++++++++++++++++++

Enno points out a few surprising side-effects which may happen with sec-nodes
without float support.

Discussion about the need of the "valuetype" entry.

Counter usage example is if a user tries to set a value which is not amongst the
"values" mapping.

Enno has two thoughts about this:

1) why not extend a "double" typed parameter with a property "restricted_values"
    containing a list of all allowed values.
    Markus mentions that this may be uncomfortable for the user, if the parameter
    range spans several decades. This could be handled in the ecs, though.

2) a set of two 'linked' parameters: one of "enum" type (as before) and a "double"
   (or "scaled") which represents the wanted numeric representation value of the
   selected enum value. updating one of those linked parameters will then have
   to also update the other parameter. Open question: indication of this linkage
   via an additional property "influences" (a list of parameter names being
   potentially changed by a change of this parameter) or via a
   "common name prefix/suffix"?

Discussion continues....

Opinions seems to tend to favor proposal 2) with the property.

Discussion about depending parameters and use cases.
Lutz writes a new proposal (related to Issue 65) about this.


Issue 66: force re-connect
++++++++++++++++++++++++++

These are essentially two points:

1) the ecs may need to signal to the sec node that it should clear its
   connections state (in case it is a serial line).

2) the secnode may want to signal to the ecs that the description has changed a
   needs to be re-read.

Point 1) can be solved by defining that ``*IDN?`` always clears the connection
state. A client should issue a ``*IDN?`` anyway as the first request.
Lutz points out, that an 'activated' serial line may send out 'garbage' bytes
before the reply, which were already in-flight. The change in the specification
therefore needs to be worded carefully.

Agreement on ``*IDN?`` always clearing the connecting state and ``*IDN?`` must
be the first command issue upon a fresh connection.

point 2) can be solved by dropping/closing the network connection.
Serial lines need a different mechanism.
An additional error message could be defined to signal this.
The error message should be returned to any request (and as async 'update' error):
"error_closed".
An ecs need to re-open (and re-init) the connection and re-read the description.
If the sec node issues an "error_closed" message, the ecs needs to issue the
``*IDN?`` / ``describe`` commands (on order) to re-init the connection.

The discussion goes on about *when* to to clear the 'this connection needs to re-read
the description' error flag and whether the sec-node should enforce a certain sequence of
requests upon opening a new connection.

discussion ended without a conclusion due to time running out.

Issue 64 / 68: multiple read / change commands
++++++++++++++++++++++++++++++++++++++++++++++

postponed to next meeting due to time running out.

