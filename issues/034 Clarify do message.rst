SECoP Issue 34: Clarify 'do' message (closed)
=============================================

The problem
-----------
previous versions specified an argument list for commands.
Sadly implementing a C-library was difficult with this and so it was decided
to switch to a single argument, which can also be one of the structual types.

This issue mainly wants to clean up some leftover inconsistencies in the specifaction texts,
reducing the need of a discussion.

Current specification (`v2018-06-14`_) states::

    A command may have arguments. Multiple arguments can be given as a JSON list.

and:
    Example:
    .. code::

      > do t1:stop
      < done t1:stop [null, {"t": 1505396348.876}]

But it also states in the `datatypes`_ section::

    if <argumenttype> is not given or null, the command has no argument
    if <resulttype> is null or not given, the command returns no result
    only one argument is allowed, several arguments SHOULD may be simulated by a struct, and not by a tuple
    the meaning of result and arguments SHOULD be written down in the description of the command.


The problem is the ambiguitiy here.
As agreed on the last meeting, commands should be declared to have an single argument or None.

.. _`v2018-06-14`: ../secop_v2018-06-14.rst#commands
.. _`datatypes`: ../secop_v2018-06-14.rst#command-1

Proposal
--------
change the above text in `v2018-06-14`_ to::

    If a command is specified with a single argument, the actual argument is given in
    the data part as a json-text. This may be also a json-object if the datatype of
    the argument specifies that
    (i.e. the type of the single argument can also be a struct, tuple or an array, see `struct`_).
    The types of arguments must conform to the declared datatypes from the datatype of the command.

    If the command does not required an argument, it SHOULD be transferred as json-null.
    A SEC-Node SHOULD also accept the message, if the data part is emtpy.

and::
    Example:
    .. code::

      > do t1:stop null
      < done t1:stop [null, {"t": 1505396348.876}]

    .. note: as describe in Issue 30: Clarify message parsing, the example request could
             also have been "do t1:stop".
             This shortened notation MAY only be used for debugging and MUST NOT
             be generated by conforming clients in normal operation.

and change the text in `datatypes`_ to::

    if <argumenttype> is null, the command has no argument
    if <resulttype> is null or not given, the command returns no result
    only one argument is allowed, though several arguments can be used if
    encapsulated in a structural datatype (struct, tuple or array).
    If such encapsulation or data grouping is needed, a struct SHOULD be used.
    In any case, the meaning of result and argument(s) SHOULD be written down
    in the description of the command.

.. _`v2018-06-14`: ../secop_v2018-06-14.rst#commands
.. _`datatypes`: ../secop_v2018-06-14.rst#command-1
.. _`struct`: ../secop_v2018-06-14.rst#struct

Discussion
----------

video conference 2018-11-07
~~~~~~~~~~~~~~~~~~~~~~~~~~~

Decision:
 - wording in current spec should be improved
 - ``do module:command`` and ``do module:command null`` MUST be treated by ALL SEC-nodes the same.
 - an ECS is free to choose which form it generates.
 - closing this issue.
